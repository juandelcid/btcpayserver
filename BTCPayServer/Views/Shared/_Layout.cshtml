@using BTCPayServer.Views.Server
@using BTCPayServer.Views.Stores
@using BTCPayServer.Views.Apps
@using BTCPayServer.Views.Invoice
@using BTCPayServer.Views.Manage
@using BTCPayServer.Views.PaymentRequest
@using BTCPayServer.Views.Wallets
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject BTCPayServer.Services.BTCPayServerEnvironment Env
@inject BTCPayServer.HostedServices.CssThemeManager ThemeManager

<!DOCTYPE html>
<html lang="en"@(Env.IsDeveloping ? " data-devenv" : "")>
<head>
    <partial name="LayoutHead" />
    @await RenderSectionAsync("PageHeadContent", false)
</head>
<body id="page-top">
    @{
        if (ViewBag.AlwaysShrinkNavBar == null)
        {
            ViewBag.AlwaysShrinkNavBar = true;
        }
        var additionalStyle = ViewBag.AlwaysShrinkNavBar ? "navbar-shrink always-shrinked" : "";
    }
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg fixed-top @additionalStyle" id="mainNav">
        <div class="container px-sm-3">
            @* Logo on Mobile *@
            <a class="navbar-brand js-scroll-trigger d-lg-none" href="~/">
                <img class="logo" src="~/img/logo.svg" />

                @if (Env.NetworkType != NBitcoin.ChainName.Mainnet)
                {
                    <span class="badge bg-warning" style="font-size:10px;">@Env.NetworkType.ToString()</span>
                }
            </a>
            <button class="navbar-toggler navbar-toggler-right" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                <svg class="navbar-toggler-icon" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><path stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-miterlimit="10" d="M4 7h22M4 15h22M4 23h22"/></svg>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <div class="py-1 py-lg-0 d-lg-flex w-100 align-items-center justify-content-between">
                    @* Logo on Desktop *@
                    <a class="navbar-brand js-scroll-trigger d-none d-lg-inline-block" href="~/">
                        <img class="logo"  src="~/img/logo.svg" />
                        @if (Env.NetworkType != NBitcoin.ChainName.Mainnet)
                        {
                            <span class="badge bg-warning" style="font-size:10px;">@Env.NetworkType.ToString()</span>
                        }
                    </a>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <ul class="navbar-nav">
                            @if (User.IsInRole(Roles.ServerAdmin))
                            {
                                <li class="nav-item"><a asp-area="" asp-controller="Server" asp-action="ListUsers" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(ServerNavPages))" id="ServerSettings">Server settings</a></li>
                            }
                            <li class="nav-item"><a asp-area="" asp-controller="UserStores" asp-action="ListStores" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(StoreNavPages))" id="Stores">Stores</a></li>
                            <li class="nav-item"><a asp-area="" asp-controller="Apps" asp-action="ListApps" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(AppsNavPages))" id="Apps">Apps</a></li>
                            <li class="nav-item"><a asp-area="" asp-controller="Wallets" asp-action="ListWallets" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(WalletsNavPages))" id="Wallets">Wallets</a></li>
                            <li class="nav-item"><a asp-area="" asp-controller="Invoice" asp-action="ListInvoices" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(InvoiceNavPages))" id="Invoices">Invoices</a></li>
                            <li class="nav-item"><a asp-area="" asp-controller="PaymentRequest" asp-action="GetPaymentRequests" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(PaymentRequestsNavPages))" id="PaymentRequests">Payment Requests</a></li>
                            <vc:ui-extension-point location="header-nav"/>
                        </ul>
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a asp-area="" asp-controller="Manage" asp-action="Index" title="My settings" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(ManageNavPages))" id="MySettings"><span class="d-lg-none d-sm-block">Account</span><i class="fa fa-user d-lg-inline-block d-none"></i></a>
                            </li>
                            <vc:notifications-dropdown/>
                            <li class="nav-item">
                                <a asp-area="" asp-controller="Account" asp- asp-action="Logout" title="Logout" class="nav-link js-scroll-trigger" id="Logout"><span class="d-lg-none d-sm-block">Logout</span><i class="fa fa-sign-out d-lg-inline-block d-none"></i></a>
                            </li>
                        </ul>
                    }
                    else if (Env.IsSecure)
                    {
                        <ul class="navbar-nav">
                            @if (ThemeManager.ShowRegister)
                            {
                                <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Register" class="nav-link js-scroll-trigger" id="Register">Register</a></li>
                            }
                            <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Login" class="nav-link js-scroll-trigger" id="Login">Log in</a></li>
                            <vc:ui-extension-point location="header-nav"/>
                        </ul>
                    }
                </div>
            </div>
            <div id="badUrl" class="alert alert-danger alert-dismissible" style="display:none; position:absolute; top:75px;" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
                    <vc:icon symbol="close" />
                </button>
                <span>BTCPay is expecting you to access this website from <b>@(Env.ExpectedProtocol)://@(Env.ExpectedHost)/</b>. If you use a reverse proxy, please set the <b>X-Forwarded-Proto</b> header to <b id="browserScheme">@(Env.ExpectedProtocol)</b> (<a href="https://docs.btcpayserver.org/FAQ/FAQ-Deployment/#cause-3-btcpay-is-expecting-you-to-access-this-website-from" target="_blank" class="alert-link" rel="noreferrer noopener">More information</a>)</span>
            </div>
            @if (!Env.IsSecure)
            {
                <div class="alert alert-danger alert-dismissible" style="position:absolute; top:75px;" role="alert">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
                        <vc:icon symbol="close" />
                    </button>
                    <span>
                        Your access to BTCPay Server is over an unsecured network. If you are using the docker deployment method with NGINX and HTTPS is not available, you probably did not configure your DNS settings correctly. <br/>
                        We disabled the register and login link so you don't leak your credentials.
                    </span>
                </div>
            }
        </div>
    </nav>

    @RenderBody()

    @if (User.Identity.IsAuthenticated)
    {
        <footer class="footer">
            <div class="container">
                <div class="float-start">Made with love by <a href="https://gtsol.net" target="_blank"  rel="noreferrer noopener">GTSol</a></div>
                <div class="text-end">@Env.ToString()</div>
            </div>
        </footer>
    }

    <partial name="LayoutFoot" />
    
    @await RenderSectionAsync("PageFootContent", false)
    <partial name="LayoutPartials/SyncModal" />
    <script type="text/javascript">
        const expectedDomain = @Safe.Json(Env.ExpectedHost);
        const expectedProtocol = @Safe.Json(Env.ExpectedProtocol);
        if (window.location.host !== expectedDomain || window.location.protocol !== expectedProtocol + ":") {
            document.getElementById("badUrl").style.display = "block";
            document.getElementById("browserScheme").innerText = window.location.protocol.substr(0, window.location.protocol.length -1);
        }
    </script>
</body>
</html>
